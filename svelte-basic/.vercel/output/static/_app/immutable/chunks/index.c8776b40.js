import{w as E}from"./index.1aa3161a.js";import{W as w,ae as O,af as C,ag as _,ah as x,a5 as S}from"./index.204e011a.js";function M(t){return t*t*t}function b(t){const r=t-1;return r*r*r+1}function A(t){return Object.prototype.toString.call(t)==="[object Date]"}function $(t,r){if(t===r||t!==t)return()=>t;const n=typeof t;if(n!==typeof r||Array.isArray(t)!==Array.isArray(r))throw new Error("Cannot interpolate values of different type");if(Array.isArray(t)){const i=r.map((e,s)=>$(t[s],e));return e=>i.map(s=>s(e))}if(n==="object"){if(!t||!r)throw new Error("Object cannot be null");if(A(t)&&A(r)){t=t.getTime(),r=r.getTime();const s=r-t;return o=>new Date(t+o*s)}const i=Object.keys(r),e={};return i.forEach(s=>{e[s]=$(t[s],r[s])}),s=>{const o={};return i.forEach(a=>{o[a]=e[a](s)}),o}}if(n==="number"){const i=r-t;return e=>t+e*i}throw new Error(`Cannot interpolate ${n} values`)}function P(t,r={}){const n=E(t);let i,e=t;function s(o,a){if(t==null)return n.set(t=o),Promise.resolve();e=o;let c=i,l=!1,{delay:h=0,duration:f=400,easing:m=_,interpolate:p=$}=w(w({},r),a);if(f===0)return c&&(c.abort(),c=null),n.set(t=e),Promise.resolve();const u=O()+h;let y;return i=C(d=>{if(d<u)return!0;l||(y=p(t,o),typeof f=="function"&&(f=f(t,o)),l=!0),c&&(c.abort(),c=null);const g=d-u;return g>f?(n.set(t=o),!1):(n.set(t=y(m(g/f))),!0)}),i.promise}return{set:s,update:(o,a)=>s(o(e,t),a),subscribe:n.subscribe}}function T(t,{delay:r=0,duration:n=400,easing:i=b,x:e=0,y:s=0,opacity:o=0}={}){const a=getComputedStyle(t),c=+a.opacity,l=a.transform==="none"?"":a.transform,h=c*(1-o),[f,m]=x(e),[p,u]=x(s);return{delay:r,duration:n,easing:i,css:(y,d)=>`
			transform: ${l} translate(${(1-y)*f}${m}, ${(1-y)*p}${u});
			opacity: ${c-h*d}`}}function U(t,{from:r,to:n},i={}){const e=getComputedStyle(t),s=e.transform==="none"?"":e.transform,[o,a]=e.transformOrigin.split(" ").map(parseFloat),c=r.left+r.width*o/n.width-(n.left+o),l=r.top+r.height*a/n.height-(n.top+a),{delay:h=0,duration:f=p=>Math.sqrt(p)*120,easing:m=b}=i;return{delay:h,duration:S(f)?f(Math.sqrt(c*c+l*l)):f,easing:m,css:(p,u)=>{const y=u*c,d=u*l,g=p+u*r.width/n.width,j=p+u*r.height/n.height;return`transform: ${s} translate(${y}px, ${d}px) scale(${g}, ${j});`}}}export{T as a,M as c,U as f,P as t};
